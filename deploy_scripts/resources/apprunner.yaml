AWSTemplateFormatVersion: '2010-09-09'
Description: ECR and SSM Parameter Store

# ------------------------------------------------------------#
#  Metadata
# ------------------------------------------------------------#
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "AppName"
        Parameters:
          - AppName
      - Label:
          default: "RepositoryName"
        Parameters:
          - RepositoryName
      - Label:
          default: "SubnetID1"
        Parameters:
          - SubnetID1
      - Label:
          default: "SubnetID2"
        Parameters:
          - SubnetID2
      - Label:
          default: "VpcID"
        Parameters:
          - VpcID

# ------------------------------------------------------------#
#  Parameters
# ------------------------------------------------------------#
Parameters:
  AppName:
    Type: String
  RepositoryName:
    Type: String
  SubnetID1:
    Type: String
  SubnetID2:
    Type: String
  VpcID:
    Type: String

# ------------------------------------------------------------#
#  Resources
# ------------------------------------------------------------#
Resources:
  ECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref RepositoryName
      # ImageTagMutability: IMMUTABLE
      ImageScanningConfiguration:
        ScanOnPush: "true"
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Delete more than 20 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 20
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-ECR"

  ManagedInstanceIDParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/ManagedInstanceIDParameter/${AppName}"
      Type: "String"
      Value: "ManagedInstanceIDParameter"
      Description: "Managed Instance ID Parameter" 

  SSMServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-SSMServiceRole"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ssm.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: !Sub "${AppName}-SSMServiceRole-DeregisterManagedInstance-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:DeregisterManagedInstance"
                Resource: "*"

  AppRunnerAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - build.apprunner.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess

  AppRunnerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: tasks.apprunner.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AppName}-SessionManager-SSM-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:DeleteActivation"
                  - "ssm:RemoveTagsFromResource"
                  - "ssm:AddTagsToResource"
                  - "ssm:CreateActivation"
                  - "ssm:DeregisterManagedInstance"
                Resource: "*"
        - PolicyName: !Sub "${AppName}-ParameterStore-SSM-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:PutParameter"
                  - "ssm:GetParameter*"
                  - "ssm:DescribeParameters"
                Resource: "*"
        - PolicyName: !Sub "${AppName}-SessionManager-PassRole-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: "*"
                Condition:
                  StringEquals:
                    iam:PassedToService: "ssm.amazonaws.com"

  AppRunnerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Ref VpcID
      GroupName: !Sub "${AppName}-sg"
      GroupDescription: "for App Runner"
      Tags:
        - Key: "Name"
          Value: !Sub "${AppName}-sg"

  VpcConnector:
    Type: AWS::AppRunner::VpcConnector
    Properties: 
      VpcConnectorName: !Sub "${AppName}-vpc-connector"
      Subnets: 
        - !Ref SubnetID1
        - !Ref SubnetID2
      SecurityGroups:
        - !Ref AppRunnerSecurityGroup

  AppRunnerService:
    Type: AWS::AppRunner::Service
    Properties: 
      HealthCheckConfiguration:
        Path: "/"
        Protocol: "HTTP"
        # Protocol: "TCP"
        Interval: 5
        Timeout: 5
        HealthyThreshold: 1
        UnhealthyThreshold: 2
      InstanceConfiguration: 
        Cpu: 1 vCPU
        Memory: 2 GB
        InstanceRoleArn: !GetAtt AppRunnerInstanceRole.Arn
      NetworkConfiguration: 
        EgressConfiguration: 
          EgressType: VPC
          VpcConnectorArn: !GetAtt VpcConnector.VpcConnectorArn
      ServiceName: !Sub "${AppName}-app-runner"
      SourceConfiguration: 
        AuthenticationConfiguration: 
          AccessRoleArn: !GetAtt AppRunnerAccessRole.Arn
        # AutoDeploymentsEnabled: true
        AutoDeploymentsEnabled: false
        ImageRepository: 
          ImageRepositoryType: ECR
          ImageIdentifier: !Sub "${ECR.RepositoryUri}:latest"
          ImageConfiguration:
            RuntimeEnvironmentVariables: 
              - Name: APP_NAME
                Value: !Ref AppName
              - Name: PORT
                Value: 8080
            Port: 8080
              
# ------------------------------------------------------------#
#  Outputs
# ------------------------------------------------------------#
Outputs:
  ECRArn:
    Export:
      Name: !Sub "${AppName}-ECR-Arn"
    Description: "ECR ARN"
    Value: !GetAtt ECR.Arn

  ManagedInstanceIDParameterName:
    Export:
      Name: !Sub "${AppName}-SSM-ManagedInstanceIDParameterName"
    Description: "Managed Instance ID Parameter Name"
    Value: !Ref ManagedInstanceIDParameter
